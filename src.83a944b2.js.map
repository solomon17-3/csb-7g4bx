{"version":3,"sources":["src/index.js"],"names":["onClickAdd","inputText","document","getElementById","value","addImcompleteList","deleteFromImcompleteList","target","removeChild","text","p","createElement","innerText","compButton","addEventListener","parentNode","compParent","firstElementChild","undoButton","deleteTarget","div","className","appendChild","li","delButton"],"mappings":";;;AAqFA,aArFA,QAAA,gBAGA,IAAMA,EAAa,WAEXC,IAAAA,EAAYC,SAASC,eAAe,YAAYC,MACtDF,SAASC,eAAe,YAAYC,MAAQ,GAG5CC,EAAkBJ,IAIdK,EAA2B,SAACC,GAChCL,SAASC,eAAe,mBAAmBK,YAAYD,IAInDF,EAAoB,SAApBA,EAAqBI,GAEnBC,IAAAA,EAAIR,SAASS,cAAc,KACjCD,EAAEE,UAAYH,EAGRI,IAAAA,EAAaX,SAASS,cAAc,UAC1CE,EAAWD,UAAY,KACvBC,EAAWC,iBAAiB,QAAS,WAEnCR,EAAyBO,EAAWE,WAAWA,YAIzCC,IACAN,EADaG,EAAWE,WACTE,kBAGfC,EAAahB,SAASS,cAAc,UAC1CO,EAAWN,UAAY,OACvBM,EAAWJ,iBAAiB,QAAS,WAE7BK,IAAAA,EAAeD,EAAWH,WAAWA,WAC3Cb,SAASC,eAAe,iBAAiBK,YAAYW,GAG/CV,IAAAA,EAAOS,EAAWH,WAAWE,kBAAkBL,UACrDP,EAAkBI,KAIdW,IAAAA,EAAMlB,SAASS,cAAc,OACnCS,EAAIC,UAAY,WAChBD,EAAIE,YAAYZ,GAChBU,EAAIE,YAAYJ,GAGVK,IAAAA,EAAKrB,SAASS,cAAc,MAClCY,EAAGD,YAAYF,GAGflB,SAASC,eAAe,iBAAiBmB,YAAYC,KAIjDC,IAAAA,EAAYtB,SAASS,cAAc,UACzCa,EAAUZ,UAAY,KACtBY,EAAUV,iBAAiB,QAAS,WAElCR,EAAyBkB,EAAUT,WAAWA,cAI1CK,IAAAA,EAAMlB,SAASS,cAAc,OACnCS,EAAIC,UAAY,WAChBD,EAAIE,YAAYZ,GAChBU,EAAIE,YAAYT,GAChBO,EAAIE,YAAYE,GAGVD,IAAAA,EAAKrB,SAASS,cAAc,MAClCY,EAAGD,YAAYF,GAGflB,SAASC,eAAe,mBAAmBmB,YAAYC,IAGzDrB,SACGC,eAAe,cACfW,iBAAiB,QAAS,WAAMd,OAAAA","file":"src.83a944b2.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\n//追加ボタン押下時に呼び出す関数\nconst onClickAdd = () => {\n  //textboxに入力された値を取り出す→textboxの値を初期化する\n  const inputText = document.getElementById(\"add-text\").value;\n  document.getElementById(\"add-text\").value = \"\";\n\n  //未完了のTODOに要素を追加する\n  addImcompleteList(inputText);\n};\n\n//未完了のtodoから要素を削除する\nconst deleteFromImcompleteList = (target) => {\n  document.getElementById(\"imcomplete-list\").removeChild(target);\n};\n\n//未完了のTODOに要素を追加する\nconst addImcompleteList = (text) => {\n  //pタグを生成する\n  const p = document.createElement(\"p\");\n  p.innerText = text;\n\n  //完了ボタンを作成する\n  const compButton = document.createElement(\"button\");\n  compButton.innerText = \"完了\";\n  compButton.addEventListener(\"click\", () => {\n    //===未完了のTODOから削除する===//\n    deleteFromImcompleteList(compButton.parentNode.parentNode);\n\n    //===完了済みTODOに追加する===//\n    //完了ボタンに紐づくpタグを取得する\n    const compParent = compButton.parentNode;\n    const p = compParent.firstElementChild;\n\n    //元に戻すボタンを作成する\n    const undoButton = document.createElement(\"button\");\n    undoButton.innerText = \"元に戻す\";\n    undoButton.addEventListener(\"click\", () => {\n      //完了済みのTODOから削除する\n      const deleteTarget = undoButton.parentNode.parentNode;\n      document.getElementById(\"complete-list\").removeChild(deleteTarget);\n\n      //未完了のTODOに追加する\n      const text = undoButton.parentNode.firstElementChild.innerText;\n      addImcompleteList(text);\n    });\n\n    //divタグを作成する\n    const div = document.createElement(\"div\");\n    div.className = \"list-row\";\n    div.appendChild(p);\n    div.appendChild(undoButton);\n\n    //liタグを作成する\n    const li = document.createElement(\"li\");\n    li.appendChild(div);\n\n    //ulタグに追加する\n    document.getElementById(\"complete-list\").appendChild(li);\n  });\n\n  //削除ボタンを作成する\n  const delButton = document.createElement(\"button\");\n  delButton.innerText = \"削除\";\n  delButton.addEventListener(\"click\", () => {\n    //deleteButtonの親ノードを取得する\n    deleteFromImcompleteList(delButton.parentNode.parentNode);\n  });\n\n  //divタグを生成する\n  const div = document.createElement(\"div\");\n  div.className = \"list-row\";\n  div.appendChild(p);\n  div.appendChild(compButton);\n  div.appendChild(delButton);\n\n  //liタグを生成する\n  const li = document.createElement(\"li\");\n  li.appendChild(div); //liの子要素にdivを配置する\n\n  //ulの子要素にdivを配置する\n  document.getElementById(\"imcomplete-list\").appendChild(li);\n};\n\ndocument\n  .getElementById(\"add-button\")\n  .addEventListener(\"click\", () => onClickAdd());\n"]}